import{e as d,b as h,v as l,c as u,m as c,A as o}from"./index-CALslcgW.js";class p{constructor(){this.tasks=[],this.isInitialized=!1,this.mapToTask=s=>{const{assigneeId:t,...a}=s;return{...a,assignee:d.getById(s.assigneeId)}},this.mapToTaskData=s=>{var e;const{assignee:t,...a}=s;return{...a,assigneeId:((e=s.assignee)==null?void 0:e.id)||null}},this.getById=s=>{const t=this.tasks.find(a=>a.id===s)||null;return t?this.mapToTask(t):null},this.getByProjectId=s=>this.tasks.filter(t=>t.projectId===s).map(this.mapToTask),this.getAllWithExecutor=(s,t,a)=>{const e=this.tasks.filter(r=>r.assigneeId===s||r.team.includes(s)),i=e.length;if(a===void 0||t===void 0)return{data:e.map(this.mapToTask),totalCount:i};const n=(t-1)*a;return{data:e.slice(n,n+a).map(this.mapToTask),totalCount:i}},this.updateOne=(s,t)=>{const a=this.tasks.find(e=>e.id===s);return a?(Object.assign(a,t,{assigneeId:t.assigneeId}),this.mapToTask(a)):null},this.update=s=>{const t=this.tasks.findIndex(a=>a.id===s.id);return t!==-1?(this.tasks[t]=this.mapToTaskData(s),this.mapToTask(this.tasks[t])):null},this.create=s=>{const a=s.assigneeId===h.Unspecified?null:d.getById(s.assigneeId),e={id:l(),projectId:s.projectId,name:s.name,description:s.description,assigneeId:(a==null?void 0:a.id)||null,team:[],status:s.status};return this.tasks.push(e),this.mapToTask(e)},this.delete=s=>{this.tasks=this.tasks.filter(t=>t.id!==s)},this.autosaveState=()=>{u(()=>{this.isInitialized&&o.set("tasks",this.tasks)})},c(this),this.loadTasks(),this.autosaveState()}loadTasks(){this.tasks=o.get("tasks")||[],this.isInitialized=!0}}const I=new p;export{I as t};
